{
  "dependencies": [

  ],
  "project_page": "https://github.com/puppetlabs/puppetlabs-lvm",
  "license": "GPLv2",
  "checksums": {
    "spec/unit/puppet/provider/logical_volume/lvm.rb": "42ed5c4abe3a40371075145d18a97e07",
    "spec/unit/puppet/type/volume_group.rb": "ea2d268e6ace696f6bccf5521296e062",
    "spec/unit/puppet/type/physical_volume.rb": "cc7e8a2cc82c6e08910901e2ca49b9b1",
    "lib/puppet/provider/volume_group/lvm.rb": "6c28663bcb22644cef1af5e25dd56290",
    "lib/puppet/provider/physical_volume/lvm.rb": "ceb7fd1c60ef79a3375da30f27e1df2e",
    "Modulefile": "2266656d041e4cd064c5bd671c33ae63",
    "manifests/init.pp": "70febe2c51d04492a0e7b4cfbcdd2ed1",
    "spec/lib/helpers.rb": "cba0cd3b30e99fde8382fdafe8319bd4",
    "spec/unit/puppet/type/filesystem.rb": "42052efe6720be2f979eee69f8892b28",
    "spec/unit/puppet/provider/filesystem/lvm.rb": "230b1066c2ab7875b5f1d98cfd8e549c",
    "spec/spec_helper.rb": "93b1a059b4ba4226dfa7472f905e4e61",
    "README.markdown": "8627fc37275ce494bbd6ab66586ab284",
    "lib/puppet/type/logical_volume.rb": "350c39a2c86e1eec8abab67d6f528a80",
    "spec/unit/puppet/provider/volume_group/lvm.rb": "212d7ccd7a6bc8e207a4cb65e5ef00e1",
    "lib/puppet/type/volume_group.rb": "e48f119df8920af800135fe38c1f6017",
    "lib/puppet/type/filesystem.rb": "5d11e39fd9c983722561795f24d283d9",
    "spec/unit/puppet/provider/physical_volume/lvm.rb": "8aa2469679dbbf918dfcda80d1e9f443",
    "lib/puppet/provider/filesystem/lvm.rb": "07453cd65faca23238ebe0cfa309a635",
    "spec/unit/puppet/type/logical_volume.rb": "1df12f515c7734659c43a37f172c2726",
    "spec/lib/matchers.rb": "0d8a1189209ded0fcefdd5ca100b01d1",
    "LICENSE": "751419260aa954499f7abaabaa882bbe",
    "lib/puppet/type/physical_volume.rb": "21f306de23bad962d2fa1f8316c6c2f0",
    "lib/puppet/provider/logical_volume/lvm.rb": "9500c9ac6c7943012b48f0b810b4a90a"
  },
  "source": "UNKNOWN",
  "description": "UNKNOWN",
  "summary": "Puppet types and providers to manage LVM",
  "name": "puppetlabs-lvm",
  "types": [
    {
      "parameters": [
        {
          "name": "name",
          "doc": ""
        },
        {
          "name": "fs_type",
          "doc": "The file system type. eg. ext3."
        },
        {
          "name": "options",
          "doc": "Params for the mkfs command. eg. -l internal,agcount=x"
        }
      ],
      "name": "filesystem",
      "providers": [
        {
          "name": "lvm",
          "doc": "Manages filesystem of a logical volume\n\nRequired binaries: `mount`."
        }
      ],
      "properties": [
        {
          "name": "ensure",
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`."
        }
      ],
      "doc": "The filesystem type"
    },
    {
      "parameters": [
        {
          "name": "name",
          "doc": "The name of the logical volume.  This is the unqualified name and will be\n            automatically added to the volume group's device path (e.g., '/dev/$vg/$lv')."
        },
        {
          "name": "volume_group",
          "doc": "The volume group name associated with this logical volume.  This will automatically\n            set this volume group as a dependency, but it must be defined elsewhere using the\n            volume_group resource type."
        },
        {
          "name": "initial_size",
          "doc": "The initial size of the logical volume. This will only apply to newly-created volumes"
        }
      ],
      "name": "logical_volume",
      "providers": [
        {
          "name": "lvm",
          "doc": "Manages LVM logical volumes\n\nRequired binaries: `lvremove`, `lvextend`, `lvs`, `mount`, `resize2fs`, `umount`, `lvcreate`, `dmsetup`."
        }
      ],
      "properties": [
        {
          "name": "ensure",
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`."
        },
        {
          "name": "size",
          "doc": "The size of the logical volume. Set to undef to use all available space"
        }
      ],
      "doc": ""
    },
    {
      "parameters": [
        {
          "name": "name",
          "doc": ""
        }
      ],
      "name": "physical_volume",
      "providers": [
        {
          "name": "lvm",
          "doc": "Manages LVM physical volumes\n\nRequired binaries: `pvs`, `pvcreate`, `pvremove`."
        }
      ],
      "properties": [
        {
          "name": "ensure",
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`."
        }
      ],
      "doc": ""
    },
    {
      "parameters": [
        {
          "name": "name",
          "doc": "The name of the volume group."
        }
      ],
      "name": "volume_group",
      "providers": [
        {
          "name": "lvm",
          "doc": "Manages LVM volume groups\n\nRequired binaries: `pvs`, `vgremove`, `vgs`, `vgextend`, `vgreduce`, `vgcreate`."
        }
      ],
      "properties": [
        {
          "name": "ensure",
          "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`."
        },
        {
          "name": "physical_volumes",
          "doc": "The list of physical volumes to be included in the volume group; this\n             will automatically set these as dependencies, but they must be defined elsewhere\n             using the physical_volume resource type."
        }
      ],
      "doc": ""
    }
  ],
  "author": "puppetlabs",
  "version": "0.1.1"
}